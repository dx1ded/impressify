name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-client-docker-image:
    runs-on: ubuntu-latest
    environment: Client-Build
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file for client
        run: |
          cat > .env << EOF
          VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
          VITE_WEBHOOK_SECRET=${{ secrets.VITE_WEBHOOK_SECRET }}

          VITE_FB_API_KEY=${{ secrets.VITE_FB_API_KEY }}
          VITE_FB_AUTH_DOMAIN=${{ secrets.VITE_FB_AUTH_DOMAIN }}
          VITE_FB_PROJECT_ID=${{ secrets.VITE_FB_PROJECT_ID }}
          VITE_FB_STORAGE_BUCKET=${{ secrets.VITE_FB_STORAGE_BUCKET }}
          VITE_FB_MESSAGING_SENDER_ID=${{ secrets.VITE_FB_MESSAGING_SENDER_ID }}
          VITE_FB_APP_ID=${{ secrets.VITE_FB_APP_ID }}
          VITE_FB_MEASUREMENT_ID=${{ secrets.VITE_FB_MEASUREMENT_ID }}

          VITE_GRAPHQL_URL=${{ vars.VITE_GRAPHQL_URL }}
          VITE_GRAPHQL_WS_URL=${{ vars.VITE_GRAPHQL_WS_URL }}
          VITE_SERVER_URL=${{ vars.VITE_SERVER_URL }}
          VITE_HOCUSPOCUS_URL=${{ vars.VITE_HOCUSPOCUS_URL }}
          EOF

      - name: Build and push client
        uses: docker/build-push-action@v6
        with:
          push: true
          file: ./docker/Dockerfile.client
          tags: ${{ secrets.DOCKERHUB_REPO }}:client-latest
          secret-files: |
            env_file=.env

  build-server-docker-image:
    environment: Server-Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file for client
        run: |
          cat > .env << EOF
          CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          FIREBASE_BUCKET_NAME=${{ secrets.FIREBASE_BUCKET_NAME }}
          WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}
          EOF

      - name: Create firebase credentials file for server
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS }}' > credentials.ts

      - name: Build and push server
        uses: docker/build-push-action@v6
        with:
          push: true
          file: ./docker/Dockerfile.server
          tags: ${{ secrets.DOCKERHUB_REPO }}:server-latest
          secret-files: |
            env_file=.env
            firebase_credentials=credentials.ts

  deploy:
    needs: [build-client-docker-image, build-server-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            cd ./www
            export IMPRESSIFY_CLIENT_IMAGE=${{ secrets.DOCKERHUB_REPO }}:client-latest
            export IMPRESSIFY_SERVER_IMAGE=${{ secrets.DOCKERHUB_REPO }}:server-latest
            docker compose down impressify-client impressify-server
            docker rmi ${{ secrets.DOCKERHUB_REPO }}:client-latest
            docker rmi ${{ secrets.DOCKERHUB_REPO }}:server-latest
            docker compose up traefik impressify-client impressify-server -d --no-recreate
